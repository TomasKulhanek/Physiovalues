<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>Simulation Browser</title>
        <script type="text/javascript" src="../Scripts/codemirror.js"></script>    
        <link rel=stylesheet href="../Scripts/codemirror.css"/>
        <!--<link href="../Scripts/javascript-tabs.css" rel="stylesheet" type="text/css" /-->
        <link href="../Scripts/jquery.handsontable.full.css" rel="stylesheet" type="text/css" />
        <script src="../Scripts/jquery-1.9.1.js" type="text/javascript"></script>
        <script src="../Scripts/jquery.handsontable.full.js" type="text/javascript"></script>    
        <link href="../Scripts/jquery-ui-1.10.3.custom.css" rel="stylesheet" type="text/css" />
        <!--link href="../Scripts/jquery-ui.css" rel="stylesheet" type="text/css" /-->
        <script src="../Scripts/jquery-ui-1.10.3.custom.js" type="text/javascript"></script>
        <script src="../Scripts/SimAppParser.js" type="text/javascript"></script>
        <script src="../Scripts/SimAppGraph.js" type="text/javascript"></script>
        <link href="../Scripts/SimAppParser.css" rel="stylesheet" type="text/css" />
        <!--script src="../Scripts/dygraph-combined.js" type="text/javascript"></script-->
        <script src="../Scripts/dygraph/dygraph-dev.js" type="text/javascript"></script> 
        <script src="../Scripts/SimAppInteraction.js" type="text/javascript"></script>
        <script src="../Scripts/jquery.sparkline.js" type="text/javascript"></script>
        <script src="../Scripts/simappdsl.js" type="text/javascript"></script>
        <script src="../Scripts/createjs/easeljs-0.6.0.min.js" type="text/javascript"></script>
        <script src="../Scripts/createjs/movieclip-0.6.0.min.js" type="text/javascript"></script>
        <script src="../Scripts/createjs/preloadjs-0.3.0.min.js" type="text/javascript"></script>
        <script src="../Scripts/createjs/tweenjs-0.4.0.min.js" type="text/javascript"></script>       
        <style>
            body {
                font: 75% sans-serif;
            }
            #footer {
                font: 80% sans-serif;
                text-align: center;
            }
            /* .ui-menu { width: 150px; }*/
        </style>
    </head>
    <body>
        <div id="appmenudiv"></div>
        <div id="tabs" >
            <ul>
                <li><a href="#tab0">Select simulator</a></li>
                <li><a href="#tab1">Simulation browser</a></li>
                <li><a href="#tab2">Initial values</a></li>
                <li><a href="#tab3">Simulation editor</a></li>                    
            </ul>
            <div id="tab0">
                 <select size="10" name="selectionField" id="models" onchange="getSelectedItem(this)"> 
        <option value="test" >test</option>  
    </select>
                <script>
                    SimulatorsUrl = "../Models";
                    updateSelectList();

                    function updateSelectList() {
                        $.getJSON(SimulatorsUrl, null, function (data) {
                            $('#models > option').remove();
                            //console.log("updatetestlist");
                            //console.log(data);
                            data.forEach(function (item) {
                                $('#models').append("<option value='" + item + "'>" + item + "</option>");
                            });
                        });
                    }

                    function getSelectedItem(item) {                
                        getSelectedItemByModelName(item.options[item.selectedIndex].value);                        
                    }
                    
                    function getSelectedItemByModelName(item) {                        
                            initializeSimAppMenu(item);
                            $("#tabs").tabs("option", "active", 1);                            
                        }
                    
                </script>
            </div>
             
            <div id="tab1">
               
                <div id="progressbar"><span class="progress-label">simulation in progress, loading data...</span></div><b><br/><br/></b>
                
                <div id="simulation">Select simulation screen from Menu.</div>
                
                <p>&nbsp;</p>
                <div id="accordion">
                    <h3>Documentation</h3>
                    <div id="doc">
                        <p>This simulator provides view to the selected variables and parameters of the model and allows proceed and control simulation. Select which screen to display, press buttons to proceed simulation
                            in desired time</p>
                    </div>
                </div>
                <p id="footer">Simulation editor & browser using Dygraph, Handsontable, Codemirror, JQuery, JQuery UI - by Tomas Kulhanek @ Creative Connections & Charles University</p>
            </div>
            <div id="tab2">                
                Here you may set initial values of simulator, this is part of simulation application.
                <div id="initialValues"></div>
                <script>
                    var initialData = [["Age", "37"], ["Height", "178"], ["Weight", "80"], ["Gender", "0"]];
                    $("#initialValues").handsontable({
                        data: initialData,
                        colHeaders: ["id", "hodnota"],
                        rowHeaders: false,
                        currentRowClassName: 'currentRow',
                        currentColClassName: 'currentCol',
                        minSpareRows: 1,
                        minSpareCols: 0,
                        fillHandle: true,
                        contextMenu: ['row_above', 'row_below', 'remove_row']                   
                    });
                </script>
            </div>
            <div id="tab3">                           
                This editor is for defining simulation application in the first tab. Syntax is still in development.
                <div id="container5">
                    <div id="container4">
                        <div id="col4">
                            <textarea id="code" name="code">                
                </textarea>
                           
                        </div>
                        <div id="col5">                            
                            Current syntax of screen definition:
                            <ul>
                                <li><b>screen [screenname]</b> - should be at the first row of the definition, screenname is the name with namespace delimited by dot '.' which is visualized as menu and submenus. Example: <i>screen Clinic.Chart</i></li> 
                                <li><b>model [modelname]</b> - modelname defines the model which will be simulated. Example: <i>model HummodHab</i></li>
                                <li><b>label [title]</b> - logical divider of some variables or section. Example <i>label Pressure</i></li>  
                                <li><b>value [title] [modelvariablename]</b> - will try get the value of modelvariablename and shows as a number. Example: <i>value Pressure CVS.heart.leftVentricle.Pressure</i></li> 
                                <li><b>graph [title] [listofvariables] - listofvariables are separated by comma ','.</b></li>
                                <li><b>smallgraph [title] [listofvariables] - half sized graph, listofvariables are separated by comma ','.</b></li>
                                <li><b>slider [title] [modelvariablename] [min] [default] [max]</b> - slider from min to max with the default value</li>
                                <li><b>bar [title] [modelvariablename] [defaultvalue]</b> - show a bar to compar with default value</li>
                                <li><b>radiobutton [title] [variable] [label1] [value1] [label2] [value2] ...</b> - radio buttons with labels and discrete values.</li>
                                <li><b>text [anytext]</b> - anytext will be shown.</li>
                                <li><b>svg [svgid] [svgelementid] [svgattribute=expression with model variables]</b> - will render SVG object of svgid and connects the value of svgattribute with value from algebraic expression. Special editor for svg objects at <a href="GraphicElements.htm">GraphicElements.htm</a></li>
                                <li><b>createjs [functiontocall] [expression with model variables]</b> - will render createJS script (exported from Adobe Flash) and at each animation point it will call "functiontocall" with the value in "expression.."</li>
                                <li><b>documentation [language]</b> - documentation section begins, other rows may contain HTML or special tags:
                                    <ul><li><b>#W [wikipedia_page]</b> - the link to wikipedia and some preview content from wikipedia will be rendered</li>
                                    <li><b>#I [wikiskripta_page]</b> - the link to wikiskripta (wikiskripta.eu) will be rendered </li>
                                    </ul>
                                </li>

                            </ul>
                        </div>
                    </div>
                </div>
                <p>
                    <button id="savesimapp">Save simulation application definition</button><button id="deletesimapp" style="float:right">Delete</button>
                </p>
               
                <script>
                    var editor = CodeMirror.fromTextArea(document.getElementById('code'), {
                        mode: 'text/simapp-dsl',
                        lineNumbers: true,
                        
                        lineWrapping:true
                    });
                 
                    $("#progressbar").hide();


                    $("#tabs").tabs({ activate: function (event, ui) {
                        //console.log(ui.newPanel.attr('id'));
                        if (ui.newPanel && (ui.newPanel.attr('id') == "tab3")) {
                            //refresh editor
                            //console.log("refreshing editor");
                            editor.refresh();
                        }
                        if (ui.newPanel && (ui.newPanel.attr('id') == "tab1")) {
                            //workaround for dygraph resizes to 0 if invisible 
                            //console.log("refreshing graphs");
                            for (var graphindex in graphs) {
//                                console.log(graphindex);
                                graphs[graphindex].resize();
                            }

                        }
                    }
                    });
 
                    $("#progressbar").progressbar({
                        value: false
                    });
                    $("#reloadsimapp").button().click(function () {
                        updateSimulationFrame();
                        
                    });
                    $("#savesimapp").button().click(function () {
                        saveSimApp(editor.getValue());                       
                    });
                    $("#deletesimapp").button().click(function () {
                        deleteSimApp(editor.getValue());
                        
                    });
                    $("#accordion").accordion({                    
                        collapsible: true
                    });

                    // http: //localhost/sim/WebApp/HumModBrowser.htm#Hemodynamics.Burkhoff_Kofranek.13.10.fmu/37
                    //load model and screen - separated by /
                    var myUrlHash = document.location.hash;
                    //console.log("url of request:" + myUrlHash);
                    //model and screen in Hash
                    if (myUrlHash.length > 0) {
                        var items2load = myUrlHash.split('/');
                        var modelName = items2load[0].substr(1);
                        //console.log("modelname:" + modelName);
                        getSelectedItemByModelName(modelName);
                        var simulatorName = items2load[1];
                        //console.log("simulatorname:" + simulatorName);
                        loadSimApp(simulatorName);
                    }
            
                </script>
            </div>
        </div>                
    </body>
</html>

  